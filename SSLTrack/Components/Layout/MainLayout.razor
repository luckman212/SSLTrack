@inherits LayoutComponentBase
@inject ThemeService ThemeService
@inject IJSRuntime JSRuntime

<MudThemingProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<PageTitle>SSLTrack - SSL Certificates Monitoring</PageTitle>

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@DrawerToggle" />
        <MudIcon Icon="@Icons.Material.Outlined.Lock" />
        <MudText Typo="Typo.h5" Class="ml-3">SSLTrack</MudText>
        <MudSpacer />
        <MudSwitch T="bool" Label="Light/Dark" Class="ma-4" Color="Color.Primary" Value="@_isDarkMode" ValueChanged="OnThemeChanged" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent Class="mt-16 pa-4">
        @Body
    </MudMainContent>
    <MudAppBar Elevation="1" Style="top: auto; bottom: 0" Dense="true" Fixed="true">
        <MudGrid Justify="Justify.Center">
            <a href="https://github.com/zimbres/SSLTrack" target="_blank">
                <MudIcon Icon="@Icons.Custom.Brands.GitHub" Title="GitHub" />
            </a>
        </MudGrid>
    </MudAppBar>
</MudLayout>

@code {
    private bool _drawerOpen = true;
    private MudTheme _theme = new();
    private bool _isDarkMode;

    protected override void OnInitialized()
    {
        var httpContext = new HttpContextAccessor().HttpContext;
        _isDarkMode = ThemeService.IsDarkMode(httpContext);
    }

    private async Task OnThemeChanged(bool value)
    {
        _isDarkMode = value;
        try
        {
            await JSRuntime.InvokeVoidAsync("setDarkModeCookie", value);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error in JS interop: {ex.Message}");
        }
    }

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}
